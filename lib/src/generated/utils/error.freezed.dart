// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'error.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#adding-getters-and-methods-to-our-models');

/// @nodoc
mixin _$Bolt12ParseError {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $Bolt12ParseErrorCopyWith<$Res> {
  factory $Bolt12ParseErrorCopyWith(
          Bolt12ParseError value, $Res Function(Bolt12ParseError) then) =
      _$Bolt12ParseErrorCopyWithImpl<$Res, Bolt12ParseError>;
}

/// @nodoc
class _$Bolt12ParseErrorCopyWithImpl<$Res, $Val extends Bolt12ParseError>
    implements $Bolt12ParseErrorCopyWith<$Res> {
  _$Bolt12ParseErrorCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidContinuationImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidContinuationImplCopyWith(
          _$Bolt12ParseError_InvalidContinuationImpl value,
          $Res Function(_$Bolt12ParseError_InvalidContinuationImpl) then) =
      __$$Bolt12ParseError_InvalidContinuationImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$Bolt12ParseError_InvalidContinuationImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidContinuationImpl>
    implements _$$Bolt12ParseError_InvalidContinuationImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidContinuationImplCopyWithImpl(
      _$Bolt12ParseError_InvalidContinuationImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidContinuationImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$Bolt12ParseError_InvalidContinuationImpl
    extends Bolt12ParseError_InvalidContinuation {
  const _$Bolt12ParseError_InvalidContinuationImpl() : super._();

  @override
  String toString() {
    return 'Bolt12ParseError.invalidContinuation()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidContinuationImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidContinuation();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidContinuation?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidContinuation != null) {
      return invalidContinuation();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidContinuation(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidContinuation?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidContinuation != null) {
      return invalidContinuation(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidContinuation extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidContinuation() =
      _$Bolt12ParseError_InvalidContinuationImpl;
  const Bolt12ParseError_InvalidContinuation._() : super._();
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidBech32HrpImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidBech32HrpImplCopyWith(
          _$Bolt12ParseError_InvalidBech32HrpImpl value,
          $Res Function(_$Bolt12ParseError_InvalidBech32HrpImpl) then) =
      __$$Bolt12ParseError_InvalidBech32HrpImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$Bolt12ParseError_InvalidBech32HrpImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidBech32HrpImpl>
    implements _$$Bolt12ParseError_InvalidBech32HrpImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidBech32HrpImplCopyWithImpl(
      _$Bolt12ParseError_InvalidBech32HrpImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidBech32HrpImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$Bolt12ParseError_InvalidBech32HrpImpl
    extends Bolt12ParseError_InvalidBech32Hrp {
  const _$Bolt12ParseError_InvalidBech32HrpImpl() : super._();

  @override
  String toString() {
    return 'Bolt12ParseError.invalidBech32Hrp()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidBech32HrpImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidBech32Hrp();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidBech32Hrp?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidBech32Hrp != null) {
      return invalidBech32Hrp();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidBech32Hrp(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidBech32Hrp?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidBech32Hrp != null) {
      return invalidBech32Hrp(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidBech32Hrp extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidBech32Hrp() =
      _$Bolt12ParseError_InvalidBech32HrpImpl;
  const Bolt12ParseError_InvalidBech32Hrp._() : super._();
}

/// @nodoc
abstract class _$$Bolt12ParseError_Bech32ImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_Bech32ImplCopyWith(
          _$Bolt12ParseError_Bech32Impl value,
          $Res Function(_$Bolt12ParseError_Bech32Impl) then) =
      __$$Bolt12ParseError_Bech32ImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$Bolt12ParseError_Bech32ImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res, _$Bolt12ParseError_Bech32Impl>
    implements _$$Bolt12ParseError_Bech32ImplCopyWith<$Res> {
  __$$Bolt12ParseError_Bech32ImplCopyWithImpl(
      _$Bolt12ParseError_Bech32Impl _value,
      $Res Function(_$Bolt12ParseError_Bech32Impl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_Bech32Impl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$Bolt12ParseError_Bech32Impl extends Bolt12ParseError_Bech32 {
  const _$Bolt12ParseError_Bech32Impl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'Bolt12ParseError.bech32(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_Bech32Impl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_Bech32ImplCopyWith<_$Bolt12ParseError_Bech32Impl>
      get copyWith => __$$Bolt12ParseError_Bech32ImplCopyWithImpl<
          _$Bolt12ParseError_Bech32Impl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return bech32(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return bech32?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (bech32 != null) {
      return bech32(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return bech32(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return bech32?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (bech32 != null) {
      return bech32(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_Bech32 extends Bolt12ParseError {
  const factory Bolt12ParseError_Bech32(final String field0) =
      _$Bolt12ParseError_Bech32Impl;
  const Bolt12ParseError_Bech32._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_Bech32ImplCopyWith<_$Bolt12ParseError_Bech32Impl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Bolt12ParseError_DecodeImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_DecodeImplCopyWith(
          _$Bolt12ParseError_DecodeImpl value,
          $Res Function(_$Bolt12ParseError_DecodeImpl) then) =
      __$$Bolt12ParseError_DecodeImplCopyWithImpl<$Res>;
  @useResult
  $Res call({DecodeError field0});

  $DecodeErrorCopyWith<$Res> get field0;
}

/// @nodoc
class __$$Bolt12ParseError_DecodeImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res, _$Bolt12ParseError_DecodeImpl>
    implements _$$Bolt12ParseError_DecodeImplCopyWith<$Res> {
  __$$Bolt12ParseError_DecodeImplCopyWithImpl(
      _$Bolt12ParseError_DecodeImpl _value,
      $Res Function(_$Bolt12ParseError_DecodeImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_DecodeImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as DecodeError,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DecodeErrorCopyWith<$Res> get field0 {
    return $DecodeErrorCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$Bolt12ParseError_DecodeImpl extends Bolt12ParseError_Decode {
  const _$Bolt12ParseError_DecodeImpl(this.field0) : super._();

  @override
  final DecodeError field0;

  @override
  String toString() {
    return 'Bolt12ParseError.decode(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_DecodeImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_DecodeImplCopyWith<_$Bolt12ParseError_DecodeImpl>
      get copyWith => __$$Bolt12ParseError_DecodeImplCopyWithImpl<
          _$Bolt12ParseError_DecodeImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return decode(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return decode?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return decode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return decode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_Decode extends Bolt12ParseError {
  const factory Bolt12ParseError_Decode(final DecodeError field0) =
      _$Bolt12ParseError_DecodeImpl;
  const Bolt12ParseError_Decode._() : super._();

  DecodeError get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_DecodeImplCopyWith<_$Bolt12ParseError_DecodeImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidSemanticsImplCopyWith(
          _$Bolt12ParseError_InvalidSemanticsImpl value,
          $Res Function(_$Bolt12ParseError_InvalidSemanticsImpl) then) =
      __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidSemanticsImpl>
    implements _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl(
      _$Bolt12ParseError_InvalidSemanticsImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidSemanticsImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_InvalidSemanticsImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$Bolt12ParseError_InvalidSemanticsImpl
    extends Bolt12ParseError_InvalidSemantics {
  const _$Bolt12ParseError_InvalidSemanticsImpl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'Bolt12ParseError.invalidSemantics(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidSemanticsImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<
          _$Bolt12ParseError_InvalidSemanticsImpl>
      get copyWith => __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl<
          _$Bolt12ParseError_InvalidSemanticsImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidSemantics(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidSemantics?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSemantics != null) {
      return invalidSemantics(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidSemantics(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidSemantics?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSemantics != null) {
      return invalidSemantics(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidSemantics extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidSemantics(final String field0) =
      _$Bolt12ParseError_InvalidSemanticsImpl;
  const Bolt12ParseError_InvalidSemantics._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<
          _$Bolt12ParseError_InvalidSemanticsImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidSignatureImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidSignatureImplCopyWith(
          _$Bolt12ParseError_InvalidSignatureImpl value,
          $Res Function(_$Bolt12ParseError_InvalidSignatureImpl) then) =
      __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidSignatureImpl>
    implements _$$Bolt12ParseError_InvalidSignatureImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl(
      _$Bolt12ParseError_InvalidSignatureImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidSignatureImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_InvalidSignatureImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$Bolt12ParseError_InvalidSignatureImpl
    extends Bolt12ParseError_InvalidSignature {
  const _$Bolt12ParseError_InvalidSignatureImpl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'Bolt12ParseError.invalidSignature(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidSignatureImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_InvalidSignatureImplCopyWith<
          _$Bolt12ParseError_InvalidSignatureImpl>
      get copyWith => __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl<
          _$Bolt12ParseError_InvalidSignatureImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidSignature(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidSignature?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSignature != null) {
      return invalidSignature(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidSignature(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidSignature?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSignature != null) {
      return invalidSignature(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidSignature extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidSignature(final String field0) =
      _$Bolt12ParseError_InvalidSignatureImpl;
  const Bolt12ParseError_InvalidSignature._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_InvalidSignatureImplCopyWith<
          _$Bolt12ParseError_InvalidSignatureImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
mixin _$DecodeError {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $DecodeErrorCopyWith<$Res> {
  factory $DecodeErrorCopyWith(
          DecodeError value, $Res Function(DecodeError) then) =
      _$DecodeErrorCopyWithImpl<$Res, DecodeError>;
}

/// @nodoc
class _$DecodeErrorCopyWithImpl<$Res, $Val extends DecodeError>
    implements $DecodeErrorCopyWith<$Res> {
  _$DecodeErrorCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$DecodeError_UnknownVersionImplCopyWith<$Res> {
  factory _$$DecodeError_UnknownVersionImplCopyWith(
          _$DecodeError_UnknownVersionImpl value,
          $Res Function(_$DecodeError_UnknownVersionImpl) then) =
      __$$DecodeError_UnknownVersionImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_UnknownVersionImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_UnknownVersionImpl>
    implements _$$DecodeError_UnknownVersionImplCopyWith<$Res> {
  __$$DecodeError_UnknownVersionImplCopyWithImpl(
      _$DecodeError_UnknownVersionImpl _value,
      $Res Function(_$DecodeError_UnknownVersionImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_UnknownVersionImpl extends DecodeError_UnknownVersion {
  const _$DecodeError_UnknownVersionImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.unknownVersion()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_UnknownVersionImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return unknownVersion();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return unknownVersion?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownVersion != null) {
      return unknownVersion();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return unknownVersion(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return unknownVersion?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownVersion != null) {
      return unknownVersion(this);
    }
    return orElse();
  }
}

abstract class DecodeError_UnknownVersion extends DecodeError {
  const factory DecodeError_UnknownVersion() = _$DecodeError_UnknownVersionImpl;
  const DecodeError_UnknownVersion._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_UnknownRequiredFeatureImplCopyWith<$Res> {
  factory _$$DecodeError_UnknownRequiredFeatureImplCopyWith(
          _$DecodeError_UnknownRequiredFeatureImpl value,
          $Res Function(_$DecodeError_UnknownRequiredFeatureImpl) then) =
      __$$DecodeError_UnknownRequiredFeatureImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_UnknownRequiredFeatureImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res,
        _$DecodeError_UnknownRequiredFeatureImpl>
    implements _$$DecodeError_UnknownRequiredFeatureImplCopyWith<$Res> {
  __$$DecodeError_UnknownRequiredFeatureImplCopyWithImpl(
      _$DecodeError_UnknownRequiredFeatureImpl _value,
      $Res Function(_$DecodeError_UnknownRequiredFeatureImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_UnknownRequiredFeatureImpl
    extends DecodeError_UnknownRequiredFeature {
  const _$DecodeError_UnknownRequiredFeatureImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.unknownRequiredFeature()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_UnknownRequiredFeatureImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return unknownRequiredFeature();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return unknownRequiredFeature?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownRequiredFeature != null) {
      return unknownRequiredFeature();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return unknownRequiredFeature(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return unknownRequiredFeature?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownRequiredFeature != null) {
      return unknownRequiredFeature(this);
    }
    return orElse();
  }
}

abstract class DecodeError_UnknownRequiredFeature extends DecodeError {
  const factory DecodeError_UnknownRequiredFeature() =
      _$DecodeError_UnknownRequiredFeatureImpl;
  const DecodeError_UnknownRequiredFeature._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_InvalidValueImplCopyWith<$Res> {
  factory _$$DecodeError_InvalidValueImplCopyWith(
          _$DecodeError_InvalidValueImpl value,
          $Res Function(_$DecodeError_InvalidValueImpl) then) =
      __$$DecodeError_InvalidValueImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_InvalidValueImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_InvalidValueImpl>
    implements _$$DecodeError_InvalidValueImplCopyWith<$Res> {
  __$$DecodeError_InvalidValueImplCopyWithImpl(
      _$DecodeError_InvalidValueImpl _value,
      $Res Function(_$DecodeError_InvalidValueImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_InvalidValueImpl extends DecodeError_InvalidValue {
  const _$DecodeError_InvalidValueImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.invalidValue()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_InvalidValueImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return invalidValue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return invalidValue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (invalidValue != null) {
      return invalidValue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return invalidValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return invalidValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (invalidValue != null) {
      return invalidValue(this);
    }
    return orElse();
  }
}

abstract class DecodeError_InvalidValue extends DecodeError {
  const factory DecodeError_InvalidValue() = _$DecodeError_InvalidValueImpl;
  const DecodeError_InvalidValue._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_ShortReadImplCopyWith<$Res> {
  factory _$$DecodeError_ShortReadImplCopyWith(
          _$DecodeError_ShortReadImpl value,
          $Res Function(_$DecodeError_ShortReadImpl) then) =
      __$$DecodeError_ShortReadImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_ShortReadImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_ShortReadImpl>
    implements _$$DecodeError_ShortReadImplCopyWith<$Res> {
  __$$DecodeError_ShortReadImplCopyWithImpl(_$DecodeError_ShortReadImpl _value,
      $Res Function(_$DecodeError_ShortReadImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_ShortReadImpl extends DecodeError_ShortRead {
  const _$DecodeError_ShortReadImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.shortRead()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_ShortReadImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return shortRead();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return shortRead?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (shortRead != null) {
      return shortRead();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return shortRead(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return shortRead?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (shortRead != null) {
      return shortRead(this);
    }
    return orElse();
  }
}

abstract class DecodeError_ShortRead extends DecodeError {
  const factory DecodeError_ShortRead() = _$DecodeError_ShortReadImpl;
  const DecodeError_ShortRead._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_BadLengthDescriptorImplCopyWith<$Res> {
  factory _$$DecodeError_BadLengthDescriptorImplCopyWith(
          _$DecodeError_BadLengthDescriptorImpl value,
          $Res Function(_$DecodeError_BadLengthDescriptorImpl) then) =
      __$$DecodeError_BadLengthDescriptorImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_BadLengthDescriptorImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res,
        _$DecodeError_BadLengthDescriptorImpl>
    implements _$$DecodeError_BadLengthDescriptorImplCopyWith<$Res> {
  __$$DecodeError_BadLengthDescriptorImplCopyWithImpl(
      _$DecodeError_BadLengthDescriptorImpl _value,
      $Res Function(_$DecodeError_BadLengthDescriptorImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_BadLengthDescriptorImpl
    extends DecodeError_BadLengthDescriptor {
  const _$DecodeError_BadLengthDescriptorImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.badLengthDescriptor()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_BadLengthDescriptorImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return badLengthDescriptor();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return badLengthDescriptor?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (badLengthDescriptor != null) {
      return badLengthDescriptor();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return badLengthDescriptor(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return badLengthDescriptor?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (badLengthDescriptor != null) {
      return badLengthDescriptor(this);
    }
    return orElse();
  }
}

abstract class DecodeError_BadLengthDescriptor extends DecodeError {
  const factory DecodeError_BadLengthDescriptor() =
      _$DecodeError_BadLengthDescriptorImpl;
  const DecodeError_BadLengthDescriptor._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_IoImplCopyWith<$Res> {
  factory _$$DecodeError_IoImplCopyWith(_$DecodeError_IoImpl value,
          $Res Function(_$DecodeError_IoImpl) then) =
      __$$DecodeError_IoImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$DecodeError_IoImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_IoImpl>
    implements _$$DecodeError_IoImplCopyWith<$Res> {
  __$$DecodeError_IoImplCopyWithImpl(
      _$DecodeError_IoImpl _value, $Res Function(_$DecodeError_IoImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$DecodeError_IoImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$DecodeError_IoImpl extends DecodeError_Io {
  const _$DecodeError_IoImpl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'DecodeError.io(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_IoImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DecodeError_IoImplCopyWith<_$DecodeError_IoImpl> get copyWith =>
      __$$DecodeError_IoImplCopyWithImpl<_$DecodeError_IoImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return io(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return io?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (io != null) {
      return io(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return io(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return io?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (io != null) {
      return io(this);
    }
    return orElse();
  }
}

abstract class DecodeError_Io extends DecodeError {
  const factory DecodeError_Io(final String field0) = _$DecodeError_IoImpl;
  const DecodeError_Io._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$DecodeError_IoImplCopyWith<_$DecodeError_IoImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DecodeError_UnsupportedCompressionImplCopyWith<$Res> {
  factory _$$DecodeError_UnsupportedCompressionImplCopyWith(
          _$DecodeError_UnsupportedCompressionImpl value,
          $Res Function(_$DecodeError_UnsupportedCompressionImpl) then) =
      __$$DecodeError_UnsupportedCompressionImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_UnsupportedCompressionImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res,
        _$DecodeError_UnsupportedCompressionImpl>
    implements _$$DecodeError_UnsupportedCompressionImplCopyWith<$Res> {
  __$$DecodeError_UnsupportedCompressionImplCopyWithImpl(
      _$DecodeError_UnsupportedCompressionImpl _value,
      $Res Function(_$DecodeError_UnsupportedCompressionImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_UnsupportedCompressionImpl
    extends DecodeError_UnsupportedCompression {
  const _$DecodeError_UnsupportedCompressionImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.unsupportedCompression()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_UnsupportedCompressionImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return unsupportedCompression();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return unsupportedCompression?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (unsupportedCompression != null) {
      return unsupportedCompression();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return unsupportedCompression(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return unsupportedCompression?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (unsupportedCompression != null) {
      return unsupportedCompression(this);
    }
    return orElse();
  }
}

abstract class DecodeError_UnsupportedCompression extends DecodeError {
  const factory DecodeError_UnsupportedCompression() =
      _$DecodeError_UnsupportedCompressionImpl;
  const DecodeError_UnsupportedCompression._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_DangerousValueImplCopyWith<$Res> {
  factory _$$DecodeError_DangerousValueImplCopyWith(
          _$DecodeError_DangerousValueImpl value,
          $Res Function(_$DecodeError_DangerousValueImpl) then) =
      __$$DecodeError_DangerousValueImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_DangerousValueImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_DangerousValueImpl>
    implements _$$DecodeError_DangerousValueImplCopyWith<$Res> {
  __$$DecodeError_DangerousValueImplCopyWithImpl(
      _$DecodeError_DangerousValueImpl _value,
      $Res Function(_$DecodeError_DangerousValueImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_DangerousValueImpl extends DecodeError_DangerousValue {
  const _$DecodeError_DangerousValueImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.dangerousValue()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_DangerousValueImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return dangerousValue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return dangerousValue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (dangerousValue != null) {
      return dangerousValue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return dangerousValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return dangerousValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (dangerousValue != null) {
      return dangerousValue(this);
    }
    return orElse();
  }
}

abstract class DecodeError_DangerousValue extends DecodeError {
  const factory DecodeError_DangerousValue() = _$DecodeError_DangerousValueImpl;
  const DecodeError_DangerousValue._() : super._();
}

/// @nodoc
mixin _$LdkNodeError {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $LdkNodeErrorCopyWith<$Res> {
  factory $LdkNodeErrorCopyWith(
          LdkNodeError value, $Res Function(LdkNodeError) then) =
      _$LdkNodeErrorCopyWithImpl<$Res, LdkNodeError>;
}

/// @nodoc
class _$LdkNodeErrorCopyWithImpl<$Res, $Val extends LdkNodeError>
    implements $LdkNodeErrorCopyWith<$Res> {
  _$LdkNodeErrorCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidTxidImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidTxidImplCopyWith(
          _$LdkNodeError_InvalidTxidImpl value,
          $Res Function(_$LdkNodeError_InvalidTxidImpl) then) =
      __$$LdkNodeError_InvalidTxidImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidTxidImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidTxidImpl>
    implements _$$LdkNodeError_InvalidTxidImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidTxidImplCopyWithImpl(
      _$LdkNodeError_InvalidTxidImpl _value,
      $Res Function(_$LdkNodeError_InvalidTxidImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidTxidImpl extends LdkNodeError_InvalidTxid {
  const _$LdkNodeError_InvalidTxidImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidTxid()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidTxidImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidTxid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidTxid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidTxid != null) {
      return invalidTxid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidTxid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidTxid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidTxid != null) {
      return invalidTxid(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidTxid extends LdkNodeError {
  const factory LdkNodeError_InvalidTxid() = _$LdkNodeError_InvalidTxidImpl;
  const LdkNodeError_InvalidTxid._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_AlreadyRunningImplCopyWith<$Res> {
  factory _$$LdkNodeError_AlreadyRunningImplCopyWith(
          _$LdkNodeError_AlreadyRunningImpl value,
          $Res Function(_$LdkNodeError_AlreadyRunningImpl) then) =
      __$$LdkNodeError_AlreadyRunningImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_AlreadyRunningImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_AlreadyRunningImpl>
    implements _$$LdkNodeError_AlreadyRunningImplCopyWith<$Res> {
  __$$LdkNodeError_AlreadyRunningImplCopyWithImpl(
      _$LdkNodeError_AlreadyRunningImpl _value,
      $Res Function(_$LdkNodeError_AlreadyRunningImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_AlreadyRunningImpl extends LdkNodeError_AlreadyRunning {
  const _$LdkNodeError_AlreadyRunningImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.alreadyRunning()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_AlreadyRunningImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return alreadyRunning();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return alreadyRunning?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (alreadyRunning != null) {
      return alreadyRunning();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return alreadyRunning(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return alreadyRunning?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (alreadyRunning != null) {
      return alreadyRunning(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_AlreadyRunning extends LdkNodeError {
  const factory LdkNodeError_AlreadyRunning() =
      _$LdkNodeError_AlreadyRunningImpl;
  const LdkNodeError_AlreadyRunning._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_NotRunningImplCopyWith<$Res> {
  factory _$$LdkNodeError_NotRunningImplCopyWith(
          _$LdkNodeError_NotRunningImpl value,
          $Res Function(_$LdkNodeError_NotRunningImpl) then) =
      __$$LdkNodeError_NotRunningImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_NotRunningImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_NotRunningImpl>
    implements _$$LdkNodeError_NotRunningImplCopyWith<$Res> {
  __$$LdkNodeError_NotRunningImplCopyWithImpl(
      _$LdkNodeError_NotRunningImpl _value,
      $Res Function(_$LdkNodeError_NotRunningImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_NotRunningImpl extends LdkNodeError_NotRunning {
  const _$LdkNodeError_NotRunningImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.notRunning()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_NotRunningImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return notRunning();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return notRunning?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (notRunning != null) {
      return notRunning();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return notRunning(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return notRunning?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (notRunning != null) {
      return notRunning(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_NotRunning extends LdkNodeError {
  const factory LdkNodeError_NotRunning() = _$LdkNodeError_NotRunningImpl;
  const LdkNodeError_NotRunning._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_OnchainTxCreationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_OnchainTxCreationFailedImplCopyWith(
          _$LdkNodeError_OnchainTxCreationFailedImpl value,
          $Res Function(_$LdkNodeError_OnchainTxCreationFailedImpl) then) =
      __$$LdkNodeError_OnchainTxCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_OnchainTxCreationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_OnchainTxCreationFailedImpl>
    implements _$$LdkNodeError_OnchainTxCreationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_OnchainTxCreationFailedImplCopyWithImpl(
      _$LdkNodeError_OnchainTxCreationFailedImpl _value,
      $Res Function(_$LdkNodeError_OnchainTxCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_OnchainTxCreationFailedImpl
    extends LdkNodeError_OnchainTxCreationFailed {
  const _$LdkNodeError_OnchainTxCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.onchainTxCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_OnchainTxCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return onchainTxCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return onchainTxCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (onchainTxCreationFailed != null) {
      return onchainTxCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return onchainTxCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return onchainTxCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (onchainTxCreationFailed != null) {
      return onchainTxCreationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_OnchainTxCreationFailed extends LdkNodeError {
  const factory LdkNodeError_OnchainTxCreationFailed() =
      _$LdkNodeError_OnchainTxCreationFailedImpl;
  const LdkNodeError_OnchainTxCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_ConnectionFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_ConnectionFailedImplCopyWith(
          _$LdkNodeError_ConnectionFailedImpl value,
          $Res Function(_$LdkNodeError_ConnectionFailedImpl) then) =
      __$$LdkNodeError_ConnectionFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_ConnectionFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_ConnectionFailedImpl>
    implements _$$LdkNodeError_ConnectionFailedImplCopyWith<$Res> {
  __$$LdkNodeError_ConnectionFailedImplCopyWithImpl(
      _$LdkNodeError_ConnectionFailedImpl _value,
      $Res Function(_$LdkNodeError_ConnectionFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_ConnectionFailedImpl
    extends LdkNodeError_ConnectionFailed {
  const _$LdkNodeError_ConnectionFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.connectionFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_ConnectionFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return connectionFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return connectionFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (connectionFailed != null) {
      return connectionFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return connectionFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return connectionFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (connectionFailed != null) {
      return connectionFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_ConnectionFailed extends LdkNodeError {
  const factory LdkNodeError_ConnectionFailed() =
      _$LdkNodeError_ConnectionFailedImpl;
  const LdkNodeError_ConnectionFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvoiceCreationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvoiceCreationFailedImplCopyWith(
          _$LdkNodeError_InvoiceCreationFailedImpl value,
          $Res Function(_$LdkNodeError_InvoiceCreationFailedImpl) then) =
      __$$LdkNodeError_InvoiceCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvoiceCreationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvoiceCreationFailedImpl>
    implements _$$LdkNodeError_InvoiceCreationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_InvoiceCreationFailedImplCopyWithImpl(
      _$LdkNodeError_InvoiceCreationFailedImpl _value,
      $Res Function(_$LdkNodeError_InvoiceCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvoiceCreationFailedImpl
    extends LdkNodeError_InvoiceCreationFailed {
  const _$LdkNodeError_InvoiceCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invoiceCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvoiceCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invoiceCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invoiceCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invoiceCreationFailed != null) {
      return invoiceCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invoiceCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invoiceCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invoiceCreationFailed != null) {
      return invoiceCreationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvoiceCreationFailed extends LdkNodeError {
  const factory LdkNodeError_InvoiceCreationFailed() =
      _$LdkNodeError_InvoiceCreationFailedImpl;
  const LdkNodeError_InvoiceCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_PaymentSendingFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_PaymentSendingFailedImplCopyWith(
          _$LdkNodeError_PaymentSendingFailedImpl value,
          $Res Function(_$LdkNodeError_PaymentSendingFailedImpl) then) =
      __$$LdkNodeError_PaymentSendingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_PaymentSendingFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_PaymentSendingFailedImpl>
    implements _$$LdkNodeError_PaymentSendingFailedImplCopyWith<$Res> {
  __$$LdkNodeError_PaymentSendingFailedImplCopyWithImpl(
      _$LdkNodeError_PaymentSendingFailedImpl _value,
      $Res Function(_$LdkNodeError_PaymentSendingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_PaymentSendingFailedImpl
    extends LdkNodeError_PaymentSendingFailed {
  const _$LdkNodeError_PaymentSendingFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.paymentSendingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_PaymentSendingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return paymentSendingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return paymentSendingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (paymentSendingFailed != null) {
      return paymentSendingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return paymentSendingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return paymentSendingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (paymentSendingFailed != null) {
      return paymentSendingFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_PaymentSendingFailed extends LdkNodeError {
  const factory LdkNodeError_PaymentSendingFailed() =
      _$LdkNodeError_PaymentSendingFailedImpl;
  const LdkNodeError_PaymentSendingFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_ProbeSendingFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_ProbeSendingFailedImplCopyWith(
          _$LdkNodeError_ProbeSendingFailedImpl value,
          $Res Function(_$LdkNodeError_ProbeSendingFailedImpl) then) =
      __$$LdkNodeError_ProbeSendingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_ProbeSendingFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_ProbeSendingFailedImpl>
    implements _$$LdkNodeError_ProbeSendingFailedImplCopyWith<$Res> {
  __$$LdkNodeError_ProbeSendingFailedImplCopyWithImpl(
      _$LdkNodeError_ProbeSendingFailedImpl _value,
      $Res Function(_$LdkNodeError_ProbeSendingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_ProbeSendingFailedImpl
    extends LdkNodeError_ProbeSendingFailed {
  const _$LdkNodeError_ProbeSendingFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.probeSendingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_ProbeSendingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return probeSendingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return probeSendingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (probeSendingFailed != null) {
      return probeSendingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return probeSendingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return probeSendingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (probeSendingFailed != null) {
      return probeSendingFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_ProbeSendingFailed extends LdkNodeError {
  const factory LdkNodeError_ProbeSendingFailed() =
      _$LdkNodeError_ProbeSendingFailedImpl;
  const LdkNodeError_ProbeSendingFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_ChannelCreationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_ChannelCreationFailedImplCopyWith(
          _$LdkNodeError_ChannelCreationFailedImpl value,
          $Res Function(_$LdkNodeError_ChannelCreationFailedImpl) then) =
      __$$LdkNodeError_ChannelCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_ChannelCreationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_ChannelCreationFailedImpl>
    implements _$$LdkNodeError_ChannelCreationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_ChannelCreationFailedImplCopyWithImpl(
      _$LdkNodeError_ChannelCreationFailedImpl _value,
      $Res Function(_$LdkNodeError_ChannelCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_ChannelCreationFailedImpl
    extends LdkNodeError_ChannelCreationFailed {
  const _$LdkNodeError_ChannelCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.channelCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_ChannelCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return channelCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return channelCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (channelCreationFailed != null) {
      return channelCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return channelCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return channelCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (channelCreationFailed != null) {
      return channelCreationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_ChannelCreationFailed extends LdkNodeError {
  const factory LdkNodeError_ChannelCreationFailed() =
      _$LdkNodeError_ChannelCreationFailedImpl;
  const LdkNodeError_ChannelCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_ChannelClosingFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_ChannelClosingFailedImplCopyWith(
          _$LdkNodeError_ChannelClosingFailedImpl value,
          $Res Function(_$LdkNodeError_ChannelClosingFailedImpl) then) =
      __$$LdkNodeError_ChannelClosingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_ChannelClosingFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_ChannelClosingFailedImpl>
    implements _$$LdkNodeError_ChannelClosingFailedImplCopyWith<$Res> {
  __$$LdkNodeError_ChannelClosingFailedImplCopyWithImpl(
      _$LdkNodeError_ChannelClosingFailedImpl _value,
      $Res Function(_$LdkNodeError_ChannelClosingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_ChannelClosingFailedImpl
    extends LdkNodeError_ChannelClosingFailed {
  const _$LdkNodeError_ChannelClosingFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.channelClosingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_ChannelClosingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return channelClosingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return channelClosingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (channelClosingFailed != null) {
      return channelClosingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return channelClosingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return channelClosingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (channelClosingFailed != null) {
      return channelClosingFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_ChannelClosingFailed extends LdkNodeError {
  const factory LdkNodeError_ChannelClosingFailed() =
      _$LdkNodeError_ChannelClosingFailedImpl;
  const LdkNodeError_ChannelClosingFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_ChannelConfigUpdateFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_ChannelConfigUpdateFailedImplCopyWith(
          _$LdkNodeError_ChannelConfigUpdateFailedImpl value,
          $Res Function(_$LdkNodeError_ChannelConfigUpdateFailedImpl) then) =
      __$$LdkNodeError_ChannelConfigUpdateFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_ChannelConfigUpdateFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_ChannelConfigUpdateFailedImpl>
    implements _$$LdkNodeError_ChannelConfigUpdateFailedImplCopyWith<$Res> {
  __$$LdkNodeError_ChannelConfigUpdateFailedImplCopyWithImpl(
      _$LdkNodeError_ChannelConfigUpdateFailedImpl _value,
      $Res Function(_$LdkNodeError_ChannelConfigUpdateFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_ChannelConfigUpdateFailedImpl
    extends LdkNodeError_ChannelConfigUpdateFailed {
  const _$LdkNodeError_ChannelConfigUpdateFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.channelConfigUpdateFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_ChannelConfigUpdateFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return channelConfigUpdateFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return channelConfigUpdateFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (channelConfigUpdateFailed != null) {
      return channelConfigUpdateFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return channelConfigUpdateFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return channelConfigUpdateFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (channelConfigUpdateFailed != null) {
      return channelConfigUpdateFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_ChannelConfigUpdateFailed extends LdkNodeError {
  const factory LdkNodeError_ChannelConfigUpdateFailed() =
      _$LdkNodeError_ChannelConfigUpdateFailedImpl;
  const LdkNodeError_ChannelConfigUpdateFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_PersistenceFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_PersistenceFailedImplCopyWith(
          _$LdkNodeError_PersistenceFailedImpl value,
          $Res Function(_$LdkNodeError_PersistenceFailedImpl) then) =
      __$$LdkNodeError_PersistenceFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_PersistenceFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_PersistenceFailedImpl>
    implements _$$LdkNodeError_PersistenceFailedImplCopyWith<$Res> {
  __$$LdkNodeError_PersistenceFailedImplCopyWithImpl(
      _$LdkNodeError_PersistenceFailedImpl _value,
      $Res Function(_$LdkNodeError_PersistenceFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_PersistenceFailedImpl
    extends LdkNodeError_PersistenceFailed {
  const _$LdkNodeError_PersistenceFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.persistenceFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_PersistenceFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return persistenceFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return persistenceFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (persistenceFailed != null) {
      return persistenceFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return persistenceFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return persistenceFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (persistenceFailed != null) {
      return persistenceFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_PersistenceFailed extends LdkNodeError {
  const factory LdkNodeError_PersistenceFailed() =
      _$LdkNodeError_PersistenceFailedImpl;
  const LdkNodeError_PersistenceFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_WalletOperationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_WalletOperationFailedImplCopyWith(
          _$LdkNodeError_WalletOperationFailedImpl value,
          $Res Function(_$LdkNodeError_WalletOperationFailedImpl) then) =
      __$$LdkNodeError_WalletOperationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_WalletOperationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_WalletOperationFailedImpl>
    implements _$$LdkNodeError_WalletOperationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_WalletOperationFailedImplCopyWithImpl(
      _$LdkNodeError_WalletOperationFailedImpl _value,
      $Res Function(_$LdkNodeError_WalletOperationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_WalletOperationFailedImpl
    extends LdkNodeError_WalletOperationFailed {
  const _$LdkNodeError_WalletOperationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.walletOperationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_WalletOperationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return walletOperationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return walletOperationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (walletOperationFailed != null) {
      return walletOperationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return walletOperationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return walletOperationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (walletOperationFailed != null) {
      return walletOperationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_WalletOperationFailed extends LdkNodeError {
  const factory LdkNodeError_WalletOperationFailed() =
      _$LdkNodeError_WalletOperationFailedImpl;
  const LdkNodeError_WalletOperationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_OnchainTxSigningFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_OnchainTxSigningFailedImplCopyWith(
          _$LdkNodeError_OnchainTxSigningFailedImpl value,
          $Res Function(_$LdkNodeError_OnchainTxSigningFailedImpl) then) =
      __$$LdkNodeError_OnchainTxSigningFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_OnchainTxSigningFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_OnchainTxSigningFailedImpl>
    implements _$$LdkNodeError_OnchainTxSigningFailedImplCopyWith<$Res> {
  __$$LdkNodeError_OnchainTxSigningFailedImplCopyWithImpl(
      _$LdkNodeError_OnchainTxSigningFailedImpl _value,
      $Res Function(_$LdkNodeError_OnchainTxSigningFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_OnchainTxSigningFailedImpl
    extends LdkNodeError_OnchainTxSigningFailed {
  const _$LdkNodeError_OnchainTxSigningFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.onchainTxSigningFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_OnchainTxSigningFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return onchainTxSigningFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return onchainTxSigningFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (onchainTxSigningFailed != null) {
      return onchainTxSigningFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return onchainTxSigningFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return onchainTxSigningFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (onchainTxSigningFailed != null) {
      return onchainTxSigningFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_OnchainTxSigningFailed extends LdkNodeError {
  const factory LdkNodeError_OnchainTxSigningFailed() =
      _$LdkNodeError_OnchainTxSigningFailedImpl;
  const LdkNodeError_OnchainTxSigningFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_MessageSigningFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_MessageSigningFailedImplCopyWith(
          _$LdkNodeError_MessageSigningFailedImpl value,
          $Res Function(_$LdkNodeError_MessageSigningFailedImpl) then) =
      __$$LdkNodeError_MessageSigningFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_MessageSigningFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_MessageSigningFailedImpl>
    implements _$$LdkNodeError_MessageSigningFailedImplCopyWith<$Res> {
  __$$LdkNodeError_MessageSigningFailedImplCopyWithImpl(
      _$LdkNodeError_MessageSigningFailedImpl _value,
      $Res Function(_$LdkNodeError_MessageSigningFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_MessageSigningFailedImpl
    extends LdkNodeError_MessageSigningFailed {
  const _$LdkNodeError_MessageSigningFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.messageSigningFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_MessageSigningFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return messageSigningFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return messageSigningFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (messageSigningFailed != null) {
      return messageSigningFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return messageSigningFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return messageSigningFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (messageSigningFailed != null) {
      return messageSigningFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_MessageSigningFailed extends LdkNodeError {
  const factory LdkNodeError_MessageSigningFailed() =
      _$LdkNodeError_MessageSigningFailedImpl;
  const LdkNodeError_MessageSigningFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_TxSyncFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_TxSyncFailedImplCopyWith(
          _$LdkNodeError_TxSyncFailedImpl value,
          $Res Function(_$LdkNodeError_TxSyncFailedImpl) then) =
      __$$LdkNodeError_TxSyncFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_TxSyncFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_TxSyncFailedImpl>
    implements _$$LdkNodeError_TxSyncFailedImplCopyWith<$Res> {
  __$$LdkNodeError_TxSyncFailedImplCopyWithImpl(
      _$LdkNodeError_TxSyncFailedImpl _value,
      $Res Function(_$LdkNodeError_TxSyncFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_TxSyncFailedImpl extends LdkNodeError_TxSyncFailed {
  const _$LdkNodeError_TxSyncFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.txSyncFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_TxSyncFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return txSyncFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return txSyncFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (txSyncFailed != null) {
      return txSyncFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return txSyncFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return txSyncFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (txSyncFailed != null) {
      return txSyncFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_TxSyncFailed extends LdkNodeError {
  const factory LdkNodeError_TxSyncFailed() = _$LdkNodeError_TxSyncFailedImpl;
  const LdkNodeError_TxSyncFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_GossipUpdateFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_GossipUpdateFailedImplCopyWith(
          _$LdkNodeError_GossipUpdateFailedImpl value,
          $Res Function(_$LdkNodeError_GossipUpdateFailedImpl) then) =
      __$$LdkNodeError_GossipUpdateFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_GossipUpdateFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_GossipUpdateFailedImpl>
    implements _$$LdkNodeError_GossipUpdateFailedImplCopyWith<$Res> {
  __$$LdkNodeError_GossipUpdateFailedImplCopyWithImpl(
      _$LdkNodeError_GossipUpdateFailedImpl _value,
      $Res Function(_$LdkNodeError_GossipUpdateFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_GossipUpdateFailedImpl
    extends LdkNodeError_GossipUpdateFailed {
  const _$LdkNodeError_GossipUpdateFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.gossipUpdateFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_GossipUpdateFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return gossipUpdateFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return gossipUpdateFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (gossipUpdateFailed != null) {
      return gossipUpdateFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return gossipUpdateFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return gossipUpdateFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (gossipUpdateFailed != null) {
      return gossipUpdateFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_GossipUpdateFailed extends LdkNodeError {
  const factory LdkNodeError_GossipUpdateFailed() =
      _$LdkNodeError_GossipUpdateFailedImpl;
  const LdkNodeError_GossipUpdateFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidAddressImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidAddressImplCopyWith(
          _$LdkNodeError_InvalidAddressImpl value,
          $Res Function(_$LdkNodeError_InvalidAddressImpl) then) =
      __$$LdkNodeError_InvalidAddressImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidAddressImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidAddressImpl>
    implements _$$LdkNodeError_InvalidAddressImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidAddressImplCopyWithImpl(
      _$LdkNodeError_InvalidAddressImpl _value,
      $Res Function(_$LdkNodeError_InvalidAddressImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidAddressImpl extends LdkNodeError_InvalidAddress {
  const _$LdkNodeError_InvalidAddressImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidAddress()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidAddressImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidAddress();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidAddress?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidAddress != null) {
      return invalidAddress();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidAddress(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidAddress?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidAddress != null) {
      return invalidAddress(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidAddress extends LdkNodeError {
  const factory LdkNodeError_InvalidAddress() =
      _$LdkNodeError_InvalidAddressImpl;
  const LdkNodeError_InvalidAddress._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidSocketAddressImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidSocketAddressImplCopyWith(
          _$LdkNodeError_InvalidSocketAddressImpl value,
          $Res Function(_$LdkNodeError_InvalidSocketAddressImpl) then) =
      __$$LdkNodeError_InvalidSocketAddressImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidSocketAddressImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidSocketAddressImpl>
    implements _$$LdkNodeError_InvalidSocketAddressImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidSocketAddressImplCopyWithImpl(
      _$LdkNodeError_InvalidSocketAddressImpl _value,
      $Res Function(_$LdkNodeError_InvalidSocketAddressImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidSocketAddressImpl
    extends LdkNodeError_InvalidSocketAddress {
  const _$LdkNodeError_InvalidSocketAddressImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidSocketAddress()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidSocketAddressImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidSocketAddress();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidSocketAddress?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidSocketAddress != null) {
      return invalidSocketAddress();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidSocketAddress(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidSocketAddress?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidSocketAddress != null) {
      return invalidSocketAddress(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidSocketAddress extends LdkNodeError {
  const factory LdkNodeError_InvalidSocketAddress() =
      _$LdkNodeError_InvalidSocketAddressImpl;
  const LdkNodeError_InvalidSocketAddress._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidPublicKeyImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidPublicKeyImplCopyWith(
          _$LdkNodeError_InvalidPublicKeyImpl value,
          $Res Function(_$LdkNodeError_InvalidPublicKeyImpl) then) =
      __$$LdkNodeError_InvalidPublicKeyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidPublicKeyImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidPublicKeyImpl>
    implements _$$LdkNodeError_InvalidPublicKeyImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidPublicKeyImplCopyWithImpl(
      _$LdkNodeError_InvalidPublicKeyImpl _value,
      $Res Function(_$LdkNodeError_InvalidPublicKeyImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidPublicKeyImpl
    extends LdkNodeError_InvalidPublicKey {
  const _$LdkNodeError_InvalidPublicKeyImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidPublicKey()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidPublicKeyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidPublicKey();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidPublicKey?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPublicKey != null) {
      return invalidPublicKey();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidPublicKey(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidPublicKey?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPublicKey != null) {
      return invalidPublicKey(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidPublicKey extends LdkNodeError {
  const factory LdkNodeError_InvalidPublicKey() =
      _$LdkNodeError_InvalidPublicKeyImpl;
  const LdkNodeError_InvalidPublicKey._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidSecretKeyImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidSecretKeyImplCopyWith(
          _$LdkNodeError_InvalidSecretKeyImpl value,
          $Res Function(_$LdkNodeError_InvalidSecretKeyImpl) then) =
      __$$LdkNodeError_InvalidSecretKeyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidSecretKeyImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidSecretKeyImpl>
    implements _$$LdkNodeError_InvalidSecretKeyImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidSecretKeyImplCopyWithImpl(
      _$LdkNodeError_InvalidSecretKeyImpl _value,
      $Res Function(_$LdkNodeError_InvalidSecretKeyImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidSecretKeyImpl
    extends LdkNodeError_InvalidSecretKey {
  const _$LdkNodeError_InvalidSecretKeyImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidSecretKey()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidSecretKeyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidSecretKey();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidSecretKey?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidSecretKey != null) {
      return invalidSecretKey();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidSecretKey(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidSecretKey?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidSecretKey != null) {
      return invalidSecretKey(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidSecretKey extends LdkNodeError {
  const factory LdkNodeError_InvalidSecretKey() =
      _$LdkNodeError_InvalidSecretKeyImpl;
  const LdkNodeError_InvalidSecretKey._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidPaymentHashImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidPaymentHashImplCopyWith(
          _$LdkNodeError_InvalidPaymentHashImpl value,
          $Res Function(_$LdkNodeError_InvalidPaymentHashImpl) then) =
      __$$LdkNodeError_InvalidPaymentHashImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidPaymentHashImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidPaymentHashImpl>
    implements _$$LdkNodeError_InvalidPaymentHashImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidPaymentHashImplCopyWithImpl(
      _$LdkNodeError_InvalidPaymentHashImpl _value,
      $Res Function(_$LdkNodeError_InvalidPaymentHashImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidPaymentHashImpl
    extends LdkNodeError_InvalidPaymentHash {
  const _$LdkNodeError_InvalidPaymentHashImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidPaymentHash()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidPaymentHashImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidPaymentHash();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidPaymentHash?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentHash != null) {
      return invalidPaymentHash();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidPaymentHash(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidPaymentHash?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentHash != null) {
      return invalidPaymentHash(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidPaymentHash extends LdkNodeError {
  const factory LdkNodeError_InvalidPaymentHash() =
      _$LdkNodeError_InvalidPaymentHashImpl;
  const LdkNodeError_InvalidPaymentHash._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidPaymentPreimageImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidPaymentPreimageImplCopyWith(
          _$LdkNodeError_InvalidPaymentPreimageImpl value,
          $Res Function(_$LdkNodeError_InvalidPaymentPreimageImpl) then) =
      __$$LdkNodeError_InvalidPaymentPreimageImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidPaymentPreimageImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidPaymentPreimageImpl>
    implements _$$LdkNodeError_InvalidPaymentPreimageImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidPaymentPreimageImplCopyWithImpl(
      _$LdkNodeError_InvalidPaymentPreimageImpl _value,
      $Res Function(_$LdkNodeError_InvalidPaymentPreimageImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidPaymentPreimageImpl
    extends LdkNodeError_InvalidPaymentPreimage {
  const _$LdkNodeError_InvalidPaymentPreimageImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidPaymentPreimage()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidPaymentPreimageImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidPaymentPreimage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidPaymentPreimage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentPreimage != null) {
      return invalidPaymentPreimage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidPaymentPreimage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidPaymentPreimage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentPreimage != null) {
      return invalidPaymentPreimage(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidPaymentPreimage extends LdkNodeError {
  const factory LdkNodeError_InvalidPaymentPreimage() =
      _$LdkNodeError_InvalidPaymentPreimageImpl;
  const LdkNodeError_InvalidPaymentPreimage._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidPaymentSecretImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidPaymentSecretImplCopyWith(
          _$LdkNodeError_InvalidPaymentSecretImpl value,
          $Res Function(_$LdkNodeError_InvalidPaymentSecretImpl) then) =
      __$$LdkNodeError_InvalidPaymentSecretImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidPaymentSecretImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidPaymentSecretImpl>
    implements _$$LdkNodeError_InvalidPaymentSecretImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidPaymentSecretImplCopyWithImpl(
      _$LdkNodeError_InvalidPaymentSecretImpl _value,
      $Res Function(_$LdkNodeError_InvalidPaymentSecretImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidPaymentSecretImpl
    extends LdkNodeError_InvalidPaymentSecret {
  const _$LdkNodeError_InvalidPaymentSecretImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidPaymentSecret()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidPaymentSecretImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidPaymentSecret();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidPaymentSecret?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentSecret != null) {
      return invalidPaymentSecret();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidPaymentSecret(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidPaymentSecret?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentSecret != null) {
      return invalidPaymentSecret(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidPaymentSecret extends LdkNodeError {
  const factory LdkNodeError_InvalidPaymentSecret() =
      _$LdkNodeError_InvalidPaymentSecretImpl;
  const LdkNodeError_InvalidPaymentSecret._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidAmountImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidAmountImplCopyWith(
          _$LdkNodeError_InvalidAmountImpl value,
          $Res Function(_$LdkNodeError_InvalidAmountImpl) then) =
      __$$LdkNodeError_InvalidAmountImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidAmountImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidAmountImpl>
    implements _$$LdkNodeError_InvalidAmountImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidAmountImplCopyWithImpl(
      _$LdkNodeError_InvalidAmountImpl _value,
      $Res Function(_$LdkNodeError_InvalidAmountImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidAmountImpl extends LdkNodeError_InvalidAmount {
  const _$LdkNodeError_InvalidAmountImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidAmount()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidAmountImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidAmount();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidAmount?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidAmount != null) {
      return invalidAmount();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidAmount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidAmount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidAmount != null) {
      return invalidAmount(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidAmount extends LdkNodeError {
  const factory LdkNodeError_InvalidAmount() = _$LdkNodeError_InvalidAmountImpl;
  const LdkNodeError_InvalidAmount._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidInvoiceImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidInvoiceImplCopyWith(
          _$LdkNodeError_InvalidInvoiceImpl value,
          $Res Function(_$LdkNodeError_InvalidInvoiceImpl) then) =
      __$$LdkNodeError_InvalidInvoiceImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidInvoiceImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidInvoiceImpl>
    implements _$$LdkNodeError_InvalidInvoiceImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidInvoiceImplCopyWithImpl(
      _$LdkNodeError_InvalidInvoiceImpl _value,
      $Res Function(_$LdkNodeError_InvalidInvoiceImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidInvoiceImpl extends LdkNodeError_InvalidInvoice {
  const _$LdkNodeError_InvalidInvoiceImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidInvoice()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidInvoiceImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidInvoice();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidInvoice?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidInvoice != null) {
      return invalidInvoice();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidInvoice(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidInvoice?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidInvoice != null) {
      return invalidInvoice(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidInvoice extends LdkNodeError {
  const factory LdkNodeError_InvalidInvoice() =
      _$LdkNodeError_InvalidInvoiceImpl;
  const LdkNodeError_InvalidInvoice._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidChannelIdImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidChannelIdImplCopyWith(
          _$LdkNodeError_InvalidChannelIdImpl value,
          $Res Function(_$LdkNodeError_InvalidChannelIdImpl) then) =
      __$$LdkNodeError_InvalidChannelIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidChannelIdImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidChannelIdImpl>
    implements _$$LdkNodeError_InvalidChannelIdImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidChannelIdImplCopyWithImpl(
      _$LdkNodeError_InvalidChannelIdImpl _value,
      $Res Function(_$LdkNodeError_InvalidChannelIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidChannelIdImpl
    extends LdkNodeError_InvalidChannelId {
  const _$LdkNodeError_InvalidChannelIdImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidChannelId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidChannelIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidChannelId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidChannelId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidChannelId != null) {
      return invalidChannelId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidChannelId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidChannelId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidChannelId != null) {
      return invalidChannelId(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidChannelId extends LdkNodeError {
  const factory LdkNodeError_InvalidChannelId() =
      _$LdkNodeError_InvalidChannelIdImpl;
  const LdkNodeError_InvalidChannelId._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidNetworkImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidNetworkImplCopyWith(
          _$LdkNodeError_InvalidNetworkImpl value,
          $Res Function(_$LdkNodeError_InvalidNetworkImpl) then) =
      __$$LdkNodeError_InvalidNetworkImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidNetworkImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidNetworkImpl>
    implements _$$LdkNodeError_InvalidNetworkImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidNetworkImplCopyWithImpl(
      _$LdkNodeError_InvalidNetworkImpl _value,
      $Res Function(_$LdkNodeError_InvalidNetworkImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidNetworkImpl extends LdkNodeError_InvalidNetwork {
  const _$LdkNodeError_InvalidNetworkImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidNetwork()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidNetworkImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidNetwork();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidNetwork?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidNetwork != null) {
      return invalidNetwork();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidNetwork(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidNetwork?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidNetwork != null) {
      return invalidNetwork(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidNetwork extends LdkNodeError {
  const factory LdkNodeError_InvalidNetwork() =
      _$LdkNodeError_InvalidNetworkImpl;
  const LdkNodeError_InvalidNetwork._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_DuplicatePaymentImplCopyWith<$Res> {
  factory _$$LdkNodeError_DuplicatePaymentImplCopyWith(
          _$LdkNodeError_DuplicatePaymentImpl value,
          $Res Function(_$LdkNodeError_DuplicatePaymentImpl) then) =
      __$$LdkNodeError_DuplicatePaymentImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_DuplicatePaymentImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_DuplicatePaymentImpl>
    implements _$$LdkNodeError_DuplicatePaymentImplCopyWith<$Res> {
  __$$LdkNodeError_DuplicatePaymentImplCopyWithImpl(
      _$LdkNodeError_DuplicatePaymentImpl _value,
      $Res Function(_$LdkNodeError_DuplicatePaymentImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_DuplicatePaymentImpl
    extends LdkNodeError_DuplicatePayment {
  const _$LdkNodeError_DuplicatePaymentImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.duplicatePayment()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_DuplicatePaymentImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return duplicatePayment();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return duplicatePayment?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (duplicatePayment != null) {
      return duplicatePayment();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return duplicatePayment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return duplicatePayment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (duplicatePayment != null) {
      return duplicatePayment(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_DuplicatePayment extends LdkNodeError {
  const factory LdkNodeError_DuplicatePayment() =
      _$LdkNodeError_DuplicatePaymentImpl;
  const LdkNodeError_DuplicatePayment._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InsufficientFundsImplCopyWith<$Res> {
  factory _$$LdkNodeError_InsufficientFundsImplCopyWith(
          _$LdkNodeError_InsufficientFundsImpl value,
          $Res Function(_$LdkNodeError_InsufficientFundsImpl) then) =
      __$$LdkNodeError_InsufficientFundsImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InsufficientFundsImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InsufficientFundsImpl>
    implements _$$LdkNodeError_InsufficientFundsImplCopyWith<$Res> {
  __$$LdkNodeError_InsufficientFundsImplCopyWithImpl(
      _$LdkNodeError_InsufficientFundsImpl _value,
      $Res Function(_$LdkNodeError_InsufficientFundsImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InsufficientFundsImpl
    extends LdkNodeError_InsufficientFunds {
  const _$LdkNodeError_InsufficientFundsImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.insufficientFunds()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InsufficientFundsImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return insufficientFunds();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return insufficientFunds?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (insufficientFunds != null) {
      return insufficientFunds();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return insufficientFunds(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return insufficientFunds?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (insufficientFunds != null) {
      return insufficientFunds(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InsufficientFunds extends LdkNodeError {
  const factory LdkNodeError_InsufficientFunds() =
      _$LdkNodeError_InsufficientFundsImpl;
  const LdkNodeError_InsufficientFunds._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_FeerateEstimationUpdateFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_FeerateEstimationUpdateFailedImplCopyWith(
          _$LdkNodeError_FeerateEstimationUpdateFailedImpl value,
          $Res Function(_$LdkNodeError_FeerateEstimationUpdateFailedImpl)
              then) =
      __$$LdkNodeError_FeerateEstimationUpdateFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_FeerateEstimationUpdateFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_FeerateEstimationUpdateFailedImpl>
    implements _$$LdkNodeError_FeerateEstimationUpdateFailedImplCopyWith<$Res> {
  __$$LdkNodeError_FeerateEstimationUpdateFailedImplCopyWithImpl(
      _$LdkNodeError_FeerateEstimationUpdateFailedImpl _value,
      $Res Function(_$LdkNodeError_FeerateEstimationUpdateFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_FeerateEstimationUpdateFailedImpl
    extends LdkNodeError_FeerateEstimationUpdateFailed {
  const _$LdkNodeError_FeerateEstimationUpdateFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.feerateEstimationUpdateFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_FeerateEstimationUpdateFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return feerateEstimationUpdateFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return feerateEstimationUpdateFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateFailed != null) {
      return feerateEstimationUpdateFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return feerateEstimationUpdateFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return feerateEstimationUpdateFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateFailed != null) {
      return feerateEstimationUpdateFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_FeerateEstimationUpdateFailed extends LdkNodeError {
  const factory LdkNodeError_FeerateEstimationUpdateFailed() =
      _$LdkNodeError_FeerateEstimationUpdateFailedImpl;
  const LdkNodeError_FeerateEstimationUpdateFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_LiquidityRequestFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_LiquidityRequestFailedImplCopyWith(
          _$LdkNodeError_LiquidityRequestFailedImpl value,
          $Res Function(_$LdkNodeError_LiquidityRequestFailedImpl) then) =
      __$$LdkNodeError_LiquidityRequestFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_LiquidityRequestFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_LiquidityRequestFailedImpl>
    implements _$$LdkNodeError_LiquidityRequestFailedImplCopyWith<$Res> {
  __$$LdkNodeError_LiquidityRequestFailedImplCopyWithImpl(
      _$LdkNodeError_LiquidityRequestFailedImpl _value,
      $Res Function(_$LdkNodeError_LiquidityRequestFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_LiquidityRequestFailedImpl
    extends LdkNodeError_LiquidityRequestFailed {
  const _$LdkNodeError_LiquidityRequestFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.liquidityRequestFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_LiquidityRequestFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return liquidityRequestFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return liquidityRequestFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (liquidityRequestFailed != null) {
      return liquidityRequestFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return liquidityRequestFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return liquidityRequestFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (liquidityRequestFailed != null) {
      return liquidityRequestFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_LiquidityRequestFailed extends LdkNodeError {
  const factory LdkNodeError_LiquidityRequestFailed() =
      _$LdkNodeError_LiquidityRequestFailedImpl;
  const LdkNodeError_LiquidityRequestFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_LiquiditySourceUnavailableImplCopyWith<$Res> {
  factory _$$LdkNodeError_LiquiditySourceUnavailableImplCopyWith(
          _$LdkNodeError_LiquiditySourceUnavailableImpl value,
          $Res Function(_$LdkNodeError_LiquiditySourceUnavailableImpl) then) =
      __$$LdkNodeError_LiquiditySourceUnavailableImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_LiquiditySourceUnavailableImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_LiquiditySourceUnavailableImpl>
    implements _$$LdkNodeError_LiquiditySourceUnavailableImplCopyWith<$Res> {
  __$$LdkNodeError_LiquiditySourceUnavailableImplCopyWithImpl(
      _$LdkNodeError_LiquiditySourceUnavailableImpl _value,
      $Res Function(_$LdkNodeError_LiquiditySourceUnavailableImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_LiquiditySourceUnavailableImpl
    extends LdkNodeError_LiquiditySourceUnavailable {
  const _$LdkNodeError_LiquiditySourceUnavailableImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.liquiditySourceUnavailable()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_LiquiditySourceUnavailableImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return liquiditySourceUnavailable();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return liquiditySourceUnavailable?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (liquiditySourceUnavailable != null) {
      return liquiditySourceUnavailable();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return liquiditySourceUnavailable(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return liquiditySourceUnavailable?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (liquiditySourceUnavailable != null) {
      return liquiditySourceUnavailable(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_LiquiditySourceUnavailable extends LdkNodeError {
  const factory LdkNodeError_LiquiditySourceUnavailable() =
      _$LdkNodeError_LiquiditySourceUnavailableImpl;
  const LdkNodeError_LiquiditySourceUnavailable._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_LiquidityFeeTooHighImplCopyWith<$Res> {
  factory _$$LdkNodeError_LiquidityFeeTooHighImplCopyWith(
          _$LdkNodeError_LiquidityFeeTooHighImpl value,
          $Res Function(_$LdkNodeError_LiquidityFeeTooHighImpl) then) =
      __$$LdkNodeError_LiquidityFeeTooHighImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_LiquidityFeeTooHighImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_LiquidityFeeTooHighImpl>
    implements _$$LdkNodeError_LiquidityFeeTooHighImplCopyWith<$Res> {
  __$$LdkNodeError_LiquidityFeeTooHighImplCopyWithImpl(
      _$LdkNodeError_LiquidityFeeTooHighImpl _value,
      $Res Function(_$LdkNodeError_LiquidityFeeTooHighImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_LiquidityFeeTooHighImpl
    extends LdkNodeError_LiquidityFeeTooHigh {
  const _$LdkNodeError_LiquidityFeeTooHighImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.liquidityFeeTooHigh()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_LiquidityFeeTooHighImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return liquidityFeeTooHigh();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return liquidityFeeTooHigh?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (liquidityFeeTooHigh != null) {
      return liquidityFeeTooHigh();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return liquidityFeeTooHigh(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return liquidityFeeTooHigh?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (liquidityFeeTooHigh != null) {
      return liquidityFeeTooHigh(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_LiquidityFeeTooHigh extends LdkNodeError {
  const factory LdkNodeError_LiquidityFeeTooHigh() =
      _$LdkNodeError_LiquidityFeeTooHighImpl;
  const LdkNodeError_LiquidityFeeTooHigh._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidPaymentIdImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidPaymentIdImplCopyWith(
          _$LdkNodeError_InvalidPaymentIdImpl value,
          $Res Function(_$LdkNodeError_InvalidPaymentIdImpl) then) =
      __$$LdkNodeError_InvalidPaymentIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidPaymentIdImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvalidPaymentIdImpl>
    implements _$$LdkNodeError_InvalidPaymentIdImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidPaymentIdImplCopyWithImpl(
      _$LdkNodeError_InvalidPaymentIdImpl _value,
      $Res Function(_$LdkNodeError_InvalidPaymentIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidPaymentIdImpl
    extends LdkNodeError_InvalidPaymentId {
  const _$LdkNodeError_InvalidPaymentIdImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidPaymentId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidPaymentIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidPaymentId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidPaymentId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentId != null) {
      return invalidPaymentId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidPaymentId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidPaymentId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidPaymentId != null) {
      return invalidPaymentId(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidPaymentId extends LdkNodeError {
  const factory LdkNodeError_InvalidPaymentId() =
      _$LdkNodeError_InvalidPaymentIdImpl;
  const LdkNodeError_InvalidPaymentId._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_DecodeImplCopyWith<$Res> {
  factory _$$LdkNodeError_DecodeImplCopyWith(_$LdkNodeError_DecodeImpl value,
          $Res Function(_$LdkNodeError_DecodeImpl) then) =
      __$$LdkNodeError_DecodeImplCopyWithImpl<$Res>;
  @useResult
  $Res call({DecodeError field0});

  $DecodeErrorCopyWith<$Res> get field0;
}

/// @nodoc
class __$$LdkNodeError_DecodeImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_DecodeImpl>
    implements _$$LdkNodeError_DecodeImplCopyWith<$Res> {
  __$$LdkNodeError_DecodeImplCopyWithImpl(_$LdkNodeError_DecodeImpl _value,
      $Res Function(_$LdkNodeError_DecodeImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LdkNodeError_DecodeImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as DecodeError,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DecodeErrorCopyWith<$Res> get field0 {
    return $DecodeErrorCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$LdkNodeError_DecodeImpl extends LdkNodeError_Decode {
  const _$LdkNodeError_DecodeImpl(this.field0) : super._();

  @override
  final DecodeError field0;

  @override
  String toString() {
    return 'LdkNodeError.decode(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_DecodeImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$LdkNodeError_DecodeImplCopyWith<_$LdkNodeError_DecodeImpl> get copyWith =>
      __$$LdkNodeError_DecodeImplCopyWithImpl<_$LdkNodeError_DecodeImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return decode(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return decode?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return decode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return decode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_Decode extends LdkNodeError {
  const factory LdkNodeError_Decode(final DecodeError field0) =
      _$LdkNodeError_DecodeImpl;
  const LdkNodeError_Decode._() : super._();

  DecodeError get field0;
  @JsonKey(ignore: true)
  _$$LdkNodeError_DecodeImplCopyWith<_$LdkNodeError_DecodeImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LdkNodeError_Bolt12ParseImplCopyWith<$Res> {
  factory _$$LdkNodeError_Bolt12ParseImplCopyWith(
          _$LdkNodeError_Bolt12ParseImpl value,
          $Res Function(_$LdkNodeError_Bolt12ParseImpl) then) =
      __$$LdkNodeError_Bolt12ParseImplCopyWithImpl<$Res>;
  @useResult
  $Res call({Bolt12ParseError field0});

  $Bolt12ParseErrorCopyWith<$Res> get field0;
}

/// @nodoc
class __$$LdkNodeError_Bolt12ParseImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_Bolt12ParseImpl>
    implements _$$LdkNodeError_Bolt12ParseImplCopyWith<$Res> {
  __$$LdkNodeError_Bolt12ParseImplCopyWithImpl(
      _$LdkNodeError_Bolt12ParseImpl _value,
      $Res Function(_$LdkNodeError_Bolt12ParseImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LdkNodeError_Bolt12ParseImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as Bolt12ParseError,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $Bolt12ParseErrorCopyWith<$Res> get field0 {
    return $Bolt12ParseErrorCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$LdkNodeError_Bolt12ParseImpl extends LdkNodeError_Bolt12Parse {
  const _$LdkNodeError_Bolt12ParseImpl(this.field0) : super._();

  @override
  final Bolt12ParseError field0;

  @override
  String toString() {
    return 'LdkNodeError.bolt12Parse(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_Bolt12ParseImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$LdkNodeError_Bolt12ParseImplCopyWith<_$LdkNodeError_Bolt12ParseImpl>
      get copyWith => __$$LdkNodeError_Bolt12ParseImplCopyWithImpl<
          _$LdkNodeError_Bolt12ParseImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return bolt12Parse(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return bolt12Parse?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (bolt12Parse != null) {
      return bolt12Parse(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return bolt12Parse(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return bolt12Parse?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (bolt12Parse != null) {
      return bolt12Parse(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_Bolt12Parse extends LdkNodeError {
  const factory LdkNodeError_Bolt12Parse(final Bolt12ParseError field0) =
      _$LdkNodeError_Bolt12ParseImpl;
  const LdkNodeError_Bolt12Parse._() : super._();

  Bolt12ParseError get field0;
  @JsonKey(ignore: true)
  _$$LdkNodeError_Bolt12ParseImplCopyWith<_$LdkNodeError_Bolt12ParseImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LdkNodeError_InvoiceRequestCreationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvoiceRequestCreationFailedImplCopyWith(
          _$LdkNodeError_InvoiceRequestCreationFailedImpl value,
          $Res Function(_$LdkNodeError_InvoiceRequestCreationFailedImpl) then) =
      __$$LdkNodeError_InvoiceRequestCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvoiceRequestCreationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_InvoiceRequestCreationFailedImpl>
    implements _$$LdkNodeError_InvoiceRequestCreationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_InvoiceRequestCreationFailedImplCopyWithImpl(
      _$LdkNodeError_InvoiceRequestCreationFailedImpl _value,
      $Res Function(_$LdkNodeError_InvoiceRequestCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvoiceRequestCreationFailedImpl
    extends LdkNodeError_InvoiceRequestCreationFailed {
  const _$LdkNodeError_InvoiceRequestCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invoiceRequestCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvoiceRequestCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invoiceRequestCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invoiceRequestCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invoiceRequestCreationFailed != null) {
      return invoiceRequestCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invoiceRequestCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invoiceRequestCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invoiceRequestCreationFailed != null) {
      return invoiceRequestCreationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvoiceRequestCreationFailed extends LdkNodeError {
  const factory LdkNodeError_InvoiceRequestCreationFailed() =
      _$LdkNodeError_InvoiceRequestCreationFailedImpl;
  const LdkNodeError_InvoiceRequestCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_OfferCreationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_OfferCreationFailedImplCopyWith(
          _$LdkNodeError_OfferCreationFailedImpl value,
          $Res Function(_$LdkNodeError_OfferCreationFailedImpl) then) =
      __$$LdkNodeError_OfferCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_OfferCreationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_OfferCreationFailedImpl>
    implements _$$LdkNodeError_OfferCreationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_OfferCreationFailedImplCopyWithImpl(
      _$LdkNodeError_OfferCreationFailedImpl _value,
      $Res Function(_$LdkNodeError_OfferCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_OfferCreationFailedImpl
    extends LdkNodeError_OfferCreationFailed {
  const _$LdkNodeError_OfferCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.offerCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_OfferCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return offerCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return offerCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (offerCreationFailed != null) {
      return offerCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return offerCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return offerCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (offerCreationFailed != null) {
      return offerCreationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_OfferCreationFailed extends LdkNodeError {
  const factory LdkNodeError_OfferCreationFailed() =
      _$LdkNodeError_OfferCreationFailedImpl;
  const LdkNodeError_OfferCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_RefundCreationFailedImplCopyWith<$Res> {
  factory _$$LdkNodeError_RefundCreationFailedImplCopyWith(
          _$LdkNodeError_RefundCreationFailedImpl value,
          $Res Function(_$LdkNodeError_RefundCreationFailedImpl) then) =
      __$$LdkNodeError_RefundCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_RefundCreationFailedImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_RefundCreationFailedImpl>
    implements _$$LdkNodeError_RefundCreationFailedImplCopyWith<$Res> {
  __$$LdkNodeError_RefundCreationFailedImplCopyWithImpl(
      _$LdkNodeError_RefundCreationFailedImpl _value,
      $Res Function(_$LdkNodeError_RefundCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_RefundCreationFailedImpl
    extends LdkNodeError_RefundCreationFailed {
  const _$LdkNodeError_RefundCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.refundCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_RefundCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return refundCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return refundCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (refundCreationFailed != null) {
      return refundCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return refundCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return refundCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (refundCreationFailed != null) {
      return refundCreationFailed(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_RefundCreationFailed extends LdkNodeError {
  const factory LdkNodeError_RefundCreationFailed() =
      _$LdkNodeError_RefundCreationFailedImpl;
  const LdkNodeError_RefundCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_FeerateEstimationUpdateTimeoutImplCopyWith<
    $Res> {
  factory _$$LdkNodeError_FeerateEstimationUpdateTimeoutImplCopyWith(
          _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl value,
          $Res Function(_$LdkNodeError_FeerateEstimationUpdateTimeoutImpl)
              then) =
      __$$LdkNodeError_FeerateEstimationUpdateTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_FeerateEstimationUpdateTimeoutImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl>
    implements
        _$$LdkNodeError_FeerateEstimationUpdateTimeoutImplCopyWith<$Res> {
  __$$LdkNodeError_FeerateEstimationUpdateTimeoutImplCopyWithImpl(
      _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl _value,
      $Res Function(_$LdkNodeError_FeerateEstimationUpdateTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl
    extends LdkNodeError_FeerateEstimationUpdateTimeout {
  const _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.feerateEstimationUpdateTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return feerateEstimationUpdateTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return feerateEstimationUpdateTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateTimeout != null) {
      return feerateEstimationUpdateTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return feerateEstimationUpdateTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return feerateEstimationUpdateTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateTimeout != null) {
      return feerateEstimationUpdateTimeout(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_FeerateEstimationUpdateTimeout
    extends LdkNodeError {
  const factory LdkNodeError_FeerateEstimationUpdateTimeout() =
      _$LdkNodeError_FeerateEstimationUpdateTimeoutImpl;
  const LdkNodeError_FeerateEstimationUpdateTimeout._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_WalletOperationTimeoutImplCopyWith<$Res> {
  factory _$$LdkNodeError_WalletOperationTimeoutImplCopyWith(
          _$LdkNodeError_WalletOperationTimeoutImpl value,
          $Res Function(_$LdkNodeError_WalletOperationTimeoutImpl) then) =
      __$$LdkNodeError_WalletOperationTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_WalletOperationTimeoutImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_WalletOperationTimeoutImpl>
    implements _$$LdkNodeError_WalletOperationTimeoutImplCopyWith<$Res> {
  __$$LdkNodeError_WalletOperationTimeoutImplCopyWithImpl(
      _$LdkNodeError_WalletOperationTimeoutImpl _value,
      $Res Function(_$LdkNodeError_WalletOperationTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_WalletOperationTimeoutImpl
    extends LdkNodeError_WalletOperationTimeout {
  const _$LdkNodeError_WalletOperationTimeoutImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.walletOperationTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_WalletOperationTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return walletOperationTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return walletOperationTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (walletOperationTimeout != null) {
      return walletOperationTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return walletOperationTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return walletOperationTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (walletOperationTimeout != null) {
      return walletOperationTimeout(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_WalletOperationTimeout extends LdkNodeError {
  const factory LdkNodeError_WalletOperationTimeout() =
      _$LdkNodeError_WalletOperationTimeoutImpl;
  const LdkNodeError_WalletOperationTimeout._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_TxSyncTimeoutImplCopyWith<$Res> {
  factory _$$LdkNodeError_TxSyncTimeoutImplCopyWith(
          _$LdkNodeError_TxSyncTimeoutImpl value,
          $Res Function(_$LdkNodeError_TxSyncTimeoutImpl) then) =
      __$$LdkNodeError_TxSyncTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_TxSyncTimeoutImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_TxSyncTimeoutImpl>
    implements _$$LdkNodeError_TxSyncTimeoutImplCopyWith<$Res> {
  __$$LdkNodeError_TxSyncTimeoutImplCopyWithImpl(
      _$LdkNodeError_TxSyncTimeoutImpl _value,
      $Res Function(_$LdkNodeError_TxSyncTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_TxSyncTimeoutImpl extends LdkNodeError_TxSyncTimeout {
  const _$LdkNodeError_TxSyncTimeoutImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.txSyncTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_TxSyncTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return txSyncTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return txSyncTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (txSyncTimeout != null) {
      return txSyncTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return txSyncTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return txSyncTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (txSyncTimeout != null) {
      return txSyncTimeout(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_TxSyncTimeout extends LdkNodeError {
  const factory LdkNodeError_TxSyncTimeout() = _$LdkNodeError_TxSyncTimeoutImpl;
  const LdkNodeError_TxSyncTimeout._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_GossipUpdateTimeoutImplCopyWith<$Res> {
  factory _$$LdkNodeError_GossipUpdateTimeoutImplCopyWith(
          _$LdkNodeError_GossipUpdateTimeoutImpl value,
          $Res Function(_$LdkNodeError_GossipUpdateTimeoutImpl) then) =
      __$$LdkNodeError_GossipUpdateTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_GossipUpdateTimeoutImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_GossipUpdateTimeoutImpl>
    implements _$$LdkNodeError_GossipUpdateTimeoutImplCopyWith<$Res> {
  __$$LdkNodeError_GossipUpdateTimeoutImplCopyWithImpl(
      _$LdkNodeError_GossipUpdateTimeoutImpl _value,
      $Res Function(_$LdkNodeError_GossipUpdateTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_GossipUpdateTimeoutImpl
    extends LdkNodeError_GossipUpdateTimeout {
  const _$LdkNodeError_GossipUpdateTimeoutImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.gossipUpdateTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_GossipUpdateTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return gossipUpdateTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return gossipUpdateTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (gossipUpdateTimeout != null) {
      return gossipUpdateTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return gossipUpdateTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return gossipUpdateTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (gossipUpdateTimeout != null) {
      return gossipUpdateTimeout(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_GossipUpdateTimeout extends LdkNodeError {
  const factory LdkNodeError_GossipUpdateTimeout() =
      _$LdkNodeError_GossipUpdateTimeoutImpl;
  const LdkNodeError_GossipUpdateTimeout._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidOfferIdImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidOfferIdImplCopyWith(
          _$LdkNodeError_InvalidOfferIdImpl value,
          $Res Function(_$LdkNodeError_InvalidOfferIdImpl) then) =
      __$$LdkNodeError_InvalidOfferIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidOfferIdImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidOfferIdImpl>
    implements _$$LdkNodeError_InvalidOfferIdImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidOfferIdImplCopyWithImpl(
      _$LdkNodeError_InvalidOfferIdImpl _value,
      $Res Function(_$LdkNodeError_InvalidOfferIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidOfferIdImpl extends LdkNodeError_InvalidOfferId {
  const _$LdkNodeError_InvalidOfferIdImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidOfferId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidOfferIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidOfferId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidOfferId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidOfferId != null) {
      return invalidOfferId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidOfferId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidOfferId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidOfferId != null) {
      return invalidOfferId(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidOfferId extends LdkNodeError {
  const factory LdkNodeError_InvalidOfferId() =
      _$LdkNodeError_InvalidOfferIdImpl;
  const LdkNodeError_InvalidOfferId._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidNodeIdImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidNodeIdImplCopyWith(
          _$LdkNodeError_InvalidNodeIdImpl value,
          $Res Function(_$LdkNodeError_InvalidNodeIdImpl) then) =
      __$$LdkNodeError_InvalidNodeIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidNodeIdImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidNodeIdImpl>
    implements _$$LdkNodeError_InvalidNodeIdImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidNodeIdImplCopyWithImpl(
      _$LdkNodeError_InvalidNodeIdImpl _value,
      $Res Function(_$LdkNodeError_InvalidNodeIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidNodeIdImpl extends LdkNodeError_InvalidNodeId {
  const _$LdkNodeError_InvalidNodeIdImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidNodeId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidNodeIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidNodeId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidNodeId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidNodeId != null) {
      return invalidNodeId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidNodeId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidNodeId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidNodeId != null) {
      return invalidNodeId(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidNodeId extends LdkNodeError {
  const factory LdkNodeError_InvalidNodeId() = _$LdkNodeError_InvalidNodeIdImpl;
  const LdkNodeError_InvalidNodeId._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidOfferImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidOfferImplCopyWith(
          _$LdkNodeError_InvalidOfferImpl value,
          $Res Function(_$LdkNodeError_InvalidOfferImpl) then) =
      __$$LdkNodeError_InvalidOfferImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidOfferImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidOfferImpl>
    implements _$$LdkNodeError_InvalidOfferImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidOfferImplCopyWithImpl(
      _$LdkNodeError_InvalidOfferImpl _value,
      $Res Function(_$LdkNodeError_InvalidOfferImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidOfferImpl extends LdkNodeError_InvalidOffer {
  const _$LdkNodeError_InvalidOfferImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidOffer()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidOfferImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidOffer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidOffer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidOffer != null) {
      return invalidOffer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidOffer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidOffer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidOffer != null) {
      return invalidOffer(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidOffer extends LdkNodeError {
  const factory LdkNodeError_InvalidOffer() = _$LdkNodeError_InvalidOfferImpl;
  const LdkNodeError_InvalidOffer._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_InvalidRefundImplCopyWith<$Res> {
  factory _$$LdkNodeError_InvalidRefundImplCopyWith(
          _$LdkNodeError_InvalidRefundImpl value,
          $Res Function(_$LdkNodeError_InvalidRefundImpl) then) =
      __$$LdkNodeError_InvalidRefundImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_InvalidRefundImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res, _$LdkNodeError_InvalidRefundImpl>
    implements _$$LdkNodeError_InvalidRefundImplCopyWith<$Res> {
  __$$LdkNodeError_InvalidRefundImplCopyWithImpl(
      _$LdkNodeError_InvalidRefundImpl _value,
      $Res Function(_$LdkNodeError_InvalidRefundImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_InvalidRefundImpl extends LdkNodeError_InvalidRefund {
  const _$LdkNodeError_InvalidRefundImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.invalidRefund()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_InvalidRefundImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return invalidRefund();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return invalidRefund?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidRefund != null) {
      return invalidRefund();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return invalidRefund(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return invalidRefund?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (invalidRefund != null) {
      return invalidRefund(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_InvalidRefund extends LdkNodeError {
  const factory LdkNodeError_InvalidRefund() = _$LdkNodeError_InvalidRefundImpl;
  const LdkNodeError_InvalidRefund._() : super._();
}

/// @nodoc
abstract class _$$LdkNodeError_UnsupportedCurrencyImplCopyWith<$Res> {
  factory _$$LdkNodeError_UnsupportedCurrencyImplCopyWith(
          _$LdkNodeError_UnsupportedCurrencyImpl value,
          $Res Function(_$LdkNodeError_UnsupportedCurrencyImpl) then) =
      __$$LdkNodeError_UnsupportedCurrencyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LdkNodeError_UnsupportedCurrencyImplCopyWithImpl<$Res>
    extends _$LdkNodeErrorCopyWithImpl<$Res,
        _$LdkNodeError_UnsupportedCurrencyImpl>
    implements _$$LdkNodeError_UnsupportedCurrencyImplCopyWith<$Res> {
  __$$LdkNodeError_UnsupportedCurrencyImplCopyWithImpl(
      _$LdkNodeError_UnsupportedCurrencyImpl _value,
      $Res Function(_$LdkNodeError_UnsupportedCurrencyImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$LdkNodeError_UnsupportedCurrencyImpl
    extends LdkNodeError_UnsupportedCurrency {
  const _$LdkNodeError_UnsupportedCurrencyImpl() : super._();

  @override
  String toString() {
    return 'LdkNodeError.unsupportedCurrency()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LdkNodeError_UnsupportedCurrencyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
  }) {
    return unsupportedCurrency();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
  }) {
    return unsupportedCurrency?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (unsupportedCurrency != null) {
      return unsupportedCurrency();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LdkNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(LdkNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(LdkNodeError_NotRunning value) notRunning,
    required TResult Function(LdkNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(LdkNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(LdkNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(LdkNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(LdkNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(LdkNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(LdkNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(LdkNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(LdkNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(LdkNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(LdkNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(LdkNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(LdkNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(LdkNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(LdkNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(LdkNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(LdkNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(LdkNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(LdkNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(LdkNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(LdkNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(LdkNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(LdkNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(LdkNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(LdkNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(LdkNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(LdkNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(LdkNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(LdkNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(LdkNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(LdkNodeError_Decode value) decode,
    required TResult Function(LdkNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(LdkNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(LdkNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(LdkNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(LdkNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(LdkNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(LdkNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(LdkNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(LdkNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(LdkNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(LdkNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
  }) {
    return unsupportedCurrency(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(LdkNodeError_NotRunning value)? notRunning,
    TResult? Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(LdkNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(LdkNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(LdkNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(LdkNodeError_Decode value)? decode,
    TResult? Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
  }) {
    return unsupportedCurrency?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LdkNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(LdkNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(LdkNodeError_NotRunning value)? notRunning,
    TResult Function(LdkNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(LdkNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(LdkNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(LdkNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(LdkNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(LdkNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(LdkNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(LdkNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(LdkNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(LdkNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(LdkNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(LdkNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(LdkNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(LdkNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(LdkNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(LdkNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(LdkNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(LdkNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(LdkNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(LdkNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(LdkNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(LdkNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(LdkNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(LdkNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(LdkNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(LdkNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(LdkNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(LdkNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(LdkNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(LdkNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(LdkNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(LdkNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(LdkNodeError_Decode value)? decode,
    TResult Function(LdkNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(LdkNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(LdkNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(LdkNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(LdkNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(LdkNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(LdkNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(LdkNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(LdkNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(LdkNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(LdkNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(LdkNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(LdkNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    required TResult orElse(),
  }) {
    if (unsupportedCurrency != null) {
      return unsupportedCurrency(this);
    }
    return orElse();
  }
}

abstract class LdkNodeError_UnsupportedCurrency extends LdkNodeError {
  const factory LdkNodeError_UnsupportedCurrency() =
      _$LdkNodeError_UnsupportedCurrencyImpl;
  const LdkNodeError_UnsupportedCurrency._() : super._();
}
